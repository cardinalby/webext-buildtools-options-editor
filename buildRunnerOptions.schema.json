{"type":"object","properties":{"substituteEnvVariables":{"description":"If true, all string values looking like $(BLABLA) will be substituted by\ncorresponding BLABLA env variable","default":true,"type":"boolean"},"extensionDirPath":{"description":"Path to extension directory","type":"string"},"stopOnError":{"description":"Stop if any build step failed","default":true,"type":"boolean"},"stopOnWarning":{"description":"Stop if any build step finished with warning","default":false,"type":"boolean"},"zipFile":{"description":"Build zip file","type":"object","properties":{"options":{"$ref":"#/definitions/IDirReaderOptions"}},"required":["options"]},"chromeWebstore":{"description":"Upload extension to Chrome Webstore","type":"object","properties":{"actions":{"description":"Additional actions after uploading extension to webstore","type":"object","properties":{"publish":{"description":"Perform publishing after uploading. Set to false, if you want to publish it manually","default":true,"type":"boolean"},"downloadPublishedCrx":{"description":"Download published crx file from Chrome Webstore to use it as artifact\nIf true, you have to specify options.downloadCrx.outCrxFilePath.\nMakes sense only if publish is true","default":false,"type":"boolean"}},"required":["downloadPublishedCrx","publish"]},"options":{"$ref":"#/definitions/IChromeWebstoreOptions"}},"required":["actions","options"]},"chromeCrx":{"description":"Build crx locally using your private key for offline distribution","type":"object","properties":{"options":{"$ref":"#/definitions/IChromeCrxOptions","description":"Specify if build is true"}},"required":["options"]},"firefoxAddons":{"description":"Deploy to Firefox Addons","type":"object","properties":{"getSignedXpi":{"description":"Prepare signed xpi file. If true, options.signXpi.extensionId should contain id of extension\nuploaded to Firefox Addons especially for offline distribution. If not specified, new extension will\nbe added for every build (not recommended). Also you should specify options.apiAccess","default":false,"type":"boolean"},"options":{"$ref":"#/definitions/IFirefoxAddonsOptions"}},"required":["getSignedXpi","options"]}},"required":["extensionDirPath","stopOnError","stopOnWarning","substituteEnvVariables"],"definitions":{"IDirReaderOptions":{"type":"object","properties":{"zipOutPath":{"description":"Target path for built unsigned zip file","type":"string"},"zipOptions":{"description":"Optional, use to specify which files will be included\nto the archive and pass options to archiver","$ref":"#/definitions/IZipOptions"}}},"IZipOptions":{"type":"object","properties":{"globPattern":{"description":"Include files according to the pattern.\nIf not specified, default value will be used:\n  '**'","type":"string"},"ignore":{"description":"Patterns of files which will be excluded from the zip\nIf not specified, default value will be used:\n['*.pem', '.git', '*.crx']","type":"array","items":{"type":"string"}},"archiverOptions":{"description":"Optional additional options for archiver package","allOf":[{"$ref":"#/definitions/CoreOptions"},{"$ref":"#/definitions/TransformOptions"},{"$ref":"#/definitions/ZipOptions"},{"$ref":"#/definitions/TarOptions"}]}}},"CoreOptions":{"type":"object","properties":{"statConcurrency":{"type":"number"}}},"TransformOptions":{"type":"object","properties":{"allowHalfOpen":{"type":"boolean"},"readableObjectMode":{"type":"boolean"},"writeableObjectMode":{"type":"boolean"},"decodeStrings":{"type":"boolean"},"encoding":{"type":"string"},"highWaterMark":{"type":"number"},"objectmode":{"type":"boolean"}}},"ZipOptions":{"type":"object","properties":{"comment":{"type":"string"},"forceLocalTime":{"type":"boolean"},"forceZip64":{"type":"boolean"},"store":{"type":"boolean"},"zlib":{"$ref":"#/definitions/ZlibOptions"}}},"ZlibOptions":{"type":"object","properties":{"flush":{"type":"number"},"finishFlush":{"type":"number"},"chunkSize":{"type":"number"},"windowBits":{"type":"number"},"level":{"type":"number"},"memLevel":{"type":"number"},"strategy":{"type":"number"},"dictionary":{"anyOf":[{"$ref":"#/definitions/ArrayBuffer"},{"$ref":"#/definitions/DataView"},{"description":"A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.","type":"object","additionalProperties":false,"patternProperties":{"^[0-9]+$":{"type":"number"}}},{"description":"A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.","type":"object","additionalProperties":false,"patternProperties":{"^[0-9]+$":{"type":"number"}}},{"description":"A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\nIf the requested number of bytes could not be allocated an exception is raised.","type":"object","additionalProperties":false,"patternProperties":{"^[0-9]+$":{"type":"number"}}},{"description":"A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.","type":"object","additionalProperties":false,"patternProperties":{"^[0-9]+$":{"type":"number"}}},{"description":"A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.","type":"object","additionalProperties":false,"patternProperties":{"^[0-9]+$":{"type":"number"}}},{"description":"A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.","type":"object","additionalProperties":false,"patternProperties":{"^[0-9]+$":{"type":"number"}}},{"description":"A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.","type":"object","additionalProperties":false,"patternProperties":{"^[0-9]+$":{"type":"number"}}},{"description":"A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.","type":"object","additionalProperties":false,"patternProperties":{"^[0-9]+$":{"type":"number"}}},{"description":"A typed array of 64-bit float values. The contents are initialized to 0. If the requested\nnumber of bytes could not be allocated an exception is raised.","type":"object","additionalProperties":false,"patternProperties":{"^[0-9]+$":{"type":"number"}}},{"description":"Raw data is stored in instances of the Buffer class.\nA Buffer is similar to an array of integers but corresponds to a raw memory allocation outside the V8 heap.  A Buffer cannot be resized.\nValid string encodings: 'ascii'|'utf8'|'utf16le'|'ucs2'(alias of 'utf16le')|'base64'|'binary'(deprecated)|'hex'","type":"object","additionalProperties":false,"patternProperties":{"^[0-9]+$":{"type":"number"}}}]}}},"ArrayBuffer":{"description":"Represents a raw buffer of binary data, which is used to store data for the\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\nbut can be passed to a typed array or DataView Object to interpret the raw\nbuffer as needed.","type":"object","properties":{"byteLength":{"description":"Read-only. The length of the ArrayBuffer (in bytes).","type":"number"},"__@toStringTag":{"type":"string"}},"required":["__@toStringTag","byteLength"]},"DataView":{"type":"object","properties":{"buffer":{"$ref":"#/definitions/ArrayBuffer"},"byteLength":{"type":"number"},"byteOffset":{"type":"number"},"__@toStringTag":{"type":"string"}},"required":["__@toStringTag","buffer","byteLength","byteOffset"]},"TarOptions":{"type":"object","properties":{"gzip":{"type":"boolean"},"gzipOptions":{"$ref":"#/definitions/ZlibOptions"}}},"IChromeWebstoreOptions":{"type":"object","properties":{"extensionId":{"description":"Your extension id in Chrome Web Store, required for all outputs","type":"string"},"apiAccess":{"description":"Required for uploadExt and publishExt outputs","$ref":"#/definitions/IChromeWebstoreApiAccessOptions"},"upload":{"description":"For uploadExt output, optional","$ref":"#/definitions/IChromeWebstoreUploadOptions"},"publish":{"description":"For publishExt output, optional","$ref":"#/definitions/IChromeWebstorePublishOptions"},"downloadCrx":{"description":"Required for publishedCrxBuffer and publishedCrxFile output","$ref":"#/definitions/IChromeWebstoreDownloadCrxOptions"}},"required":["extensionId"]},"IChromeWebstoreApiAccessOptions":{"type":"object","properties":{"clientId":{"description":"Needed to access Chrome Web Store API via chrome-webstore-upload package","type":"string"},"clientSecret":{"description":"Needed to access Chrome Web Store API via chrome-webstore-upload package","type":"string"},"refreshToken":{"description":"Needed to access Chrome Web Store API via chrome-webstore-upload package","type":"string"}},"required":["clientId","clientSecret","refreshToken"]},"IChromeWebstoreUploadOptions":{"type":"object","properties":{"waitForSuccess":{"description":"If after upload extension gets status IN_PROGRESS, builder can repeatedly check\nuntil it gets SUCCESS status\nSpecify { checkCount: XX, checkIntervalMs: XXXX } for this behavior\nIf not specified, IN_PROGRESS status will be considered as build error, and build()\nmethod will throw an exception","$ref":"#/definitions/IWaitForWebstoreOptions"}}},"IWaitForWebstoreOptions":{"type":"object","properties":{"checkCount":{"type":"number"},"checkIntervalMs":{"type":"number"}},"required":["checkCount","checkIntervalMs"]},"IChromeWebstorePublishOptions":{"type":"object","properties":{"target":{"description":"'default' or 'trustedTesters'\nIf not specified, 'default' will be used","type":"string"},"allowedStatuses":{"description":"Array of allowed statuses, returned in publish response (if publishedExt output is required)\nIf status is in array, build is considered successful, if not, build() method will throw Error\nIf not specified, 'OK' and 'ITEM_PENDING_REVIEW' will be considered successful","type":"array","items":{"type":"string"}},"ignore500Error":{"description":"Experimental option due to undocumented Webstore API behaviour\nFor example, extension had a version = '1.10.0'\nThen we successfully published a new one with version = '1.20.0' (status = 'OK')\n'get upload' request returns version '1.20.0' after it. But this version is still in publishing progress\nNow we are publishing '1.30.0' but 'publish' and request fails with 500 error, but (!) actually\nour version have been accepted, and after some time out extension increases it's version to '1.30.0'!\n\nSet this option to true to consider 500 response as success'","type":"boolean"}}},"IChromeWebstoreDownloadCrxOptions":{"type":"object","properties":{"outCrxFilePath":{"description":"Output crx file path if it required as not temporary","type":"string"},"prodVersion":{"description":"Optional param for","type":"string"},"acceptFormat":{"type":"array","items":{"type":"string"}},"platform":{"description":"Optional param for","$ref":"#/definitions/DownloadCrx.IPlatformRequest"}}},"DownloadCrx.IPlatformRequest":{"description":"Some extensions contain NaCl modules, that require additional query string parameters","type":"object","properties":{"os":{"type":"string"},"arch":{"type":"string"},"naclArch":{"type":"string"}},"required":["arch","naclArch","os"]},"IChromeCrxOptions":{"description":"Signing for offline distribution performs via crx package","type":"object","properties":{"privateKey":{"description":"Raw data is stored in instances of the Buffer class.\nA Buffer is similar to an array of integers but corresponds to a raw memory allocation outside the V8 heap.  A Buffer cannot be resized.\nValid string encodings: 'ascii'|'utf8'|'utf16le'|'ucs2'(alias of 'utf16le')|'base64'|'binary'(deprecated)|'hex'","type":"object","additionalProperties":false,"patternProperties":{"^[0-9]+$":{"type":"number"}}},"privateKeyFilePath":{"description":"Provide either privateKey with privateKey itself or privateKeyFilePath","type":"string"},"crxFilePath":{"description":"Output file path if not temporary crxFile output required","type":"string"},"updateXml":{"description":"This option needed only if UpdateXml output is required. For this output\nbuilder generates an updateXML for extensions hosted not on Chrome Web Store\nThis xml is used as response at url, specified in manifest's 'update_url' key","$ref":"#/definitions/IUpdateXmlOptions"}}},"IUpdateXmlOptions":{"type":"object","properties":{"outFilePath":{"description":"Save to file if not temporary updateXml file required","type":"string"},"codebaseUrl":{"description":"URL to the .crx file","type":"string"},"appId":{"description":"if not specified it will be generated from privateKey","type":"string"}},"required":["codebaseUrl"]},"IFirefoxAddonsOptions":{"description":"Signing for offline dist performs via Firefox Addons API","type":"object","properties":{"api":{"type":"object","properties":{"jwtIssuer":{"description":"JWT issuer also called 'apiKey' obtained from created credentials","type":"string"},"jwtSecret":{"description":"JWT secret also called 'apiSecret' obtained from created credentials","type":"string"}},"required":["jwtIssuer","jwtSecret"]},"deploy":{"type":"object","properties":{"extensionId":{"description":"Id of extension which was already uploaded to Firefox Addons","type":"string"}},"required":["extensionId"]},"signXpi":{"type":"object","properties":{"extensionId":{"description":"Id of extension uploaded to Firefox Addons especially for offline distribution\nIf not specified, new extension will be added for every build (not recommended)","type":"string"},"xpiOutPath":{"description":"Target path for built and signed xpi file. Could be undefined for temporary build output","type":"string"},"signAddonLib":{"description":"Options for underlying 'signAddon' lib","$ref":"#/definitions/ISignAddonLibOptions"}}}},"required":["api"]},"ISignAddonLibOptions":{"type":"object","properties":{"apiUrlPrefix":{"default":"https://addons.mozilla.org/api/v3","type":"string"},"apiJwtExpiresIn":{"description":"Optional override to the number of seconds until the JWT token for\nthe API request expires. This must match the expiration time that\nthe API server accepts.","type":"number"},"verbose":{"default":false,"type":"boolean"},"channel":{"description":"The release channel (listed or unlisted).\nIgnored for new add-ons, which are always unlisted.\nDefault: most recently used channel.","type":"string"},"timeout":{"description":"Number of milliseconds to wait before aborting the request.\nDefault: 2 minutes.","type":"number"},"apiProxy":{"description":"Optional proxy to use for all API requests,\nsuch as \"http://yourproxy:6000\"\nRead this for details on how proxy requests work:\nhttps://github.com/request/request#proxies","type":"string"},"apiRequestConfig":{"description":"Optional object to pass to request() for additional configuration.\nSome properties such as 'url' cannot be defined here.\nAvailable options:\nhttps://github.com/request/request#requestoptions-callback","type":"object","properties":{},"additionalProperties":true},"AMOClient":{"description":"Not typed yet"}}}},"$schema":"http://json-schema.org/draft-07/schema#"}